server:
  port: 1111

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true #注册到Eureka Server上的是IP

spring:
  application:
    name: gateway
  #Redis配置
  redis:
    host: 127.0.0.1
    port: 6379

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # gateway可以通过开启以下配置来打开根据服务的serviceId来匹配路由,默认是大写
      globalcors:
        cors-configurations:
          '[/**]': # 匹配所有请求
            allowedOrigins: "*" #跨域处理 允许所有的域
            allowedMethods: # 支持的方法
              - GET
              - POST
              - PUT
              - DELETE
      default-filters:
        - AddResponseHeader=X-Response-Default-Foo,Default-Bar  #添加响应头X-Response-Default-Foo →Default-Bar
      routes:
        - id: wvlike-test-demo02
#          uri: http://localhost:18082     #域名域名或者ip端口转发
          uri: lb://wvlike-test-demo02    #微服务转发
          order: 10000
          predicates:
            #- Host=www.wvlike.com**
            #- Path=/goods/**
            - Path=/wvlike-test-demo02/**
          filters:
#            - RewritePath=/api/(?<oldPath>.*), /$\{oldPath}   #添加前缀
#            - Default=true    #指定过滤器DefaultfaceGatewayFilterFactory.class
#            - PrefixPath=/wvlike-test-demo02
            - StripPrefix=1
            - name: RequestRateLimiter #请求数限流 名字不能随便写 ，使用默认的facatory
              args:
                key-resolver: "#{@ipKeyResolver}"
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 2
                fallbackUri: "forward:/fallback"
# hystrix 信号量隔离，1.5秒后自动超时
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 1500