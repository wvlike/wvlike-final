server:
  port: 18002
  servlet:
    context-path: /user
spring:
  profiles:
    active: local
  data:
    mongodb:
      uri: mongodb://localhost:27017/mydb
  application:
    name: wvlike-user
  datasource:
#    className: "com.alibaba.druid.pool.DruidDataSource"
#    dataSourceMap:
#      driver-class-name: "com.mysql.cj.jdbc.Driver"
#      url: "jdbc:mysql://localhost/txw?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC"
#      username: "root"
#      password: "root"

    driver-class-name: "com.mysql.cj.jdbc.Driver"
    url: "jdbc:mysql://localhost/txw?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC"
    username: "root"
    password: "root"

  #redis配置
  redis:
    host: localhost
    port: 6379

  #rabbitmq配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

# apollo集成
# apollo 配置应用的 appid
app:
  id: ${spring.application.name}
# apollo meta-server地址，一般同config-server地址
apollo:
  meta: http://127.0.0.1:8080
#启用apollo配置开关
  bootstrap:
    enabled: true
    eagerLoad:
      enabled: true
# apollo 使用配置的命名空间，多个以逗号分隔
#  namespaces: application


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:7001/eureka
  instance:
    prefer-ip-address: true #注册到Eureka Server上的是IP
feign:
  hystrix:
    enabled: true #feign开启hystrix
mybatis:
  configuration:
    map-underscore-to-camel-case: true
  mapper-locations: classpath:mapper/*Mapper.xml
  type-aliases-package: com.wvlike

#hystrix 配置
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 100000
          strategy: SEMAPHORE

#connection-timeout:服务连接超时时间
#socket-connect：HTTP请求超时时间
#timeoutInMilliseconds：feign连接超时时间
#cluster-name：Elasticsearch的集群节点名称，这里需要和Elasticsearch集群节点名称保持一致
#cluster-nodes：Elasticsearch节点通信地址

logging:
  level:
    org:
      springframework:
        boot:
          autoconfigure:
            logging: error


#最大连接数
http:
  maxTotal: 100
#并发数
  defaultMaxPerRoute: 20
#创建连接的最长时间
  connectTimeout: 1000
#从连接池中获取到连接的最长时间
  connectionRequestTimeout: 500
#数据传输的最长时间
  socketTimeout: 10000
#提交请求前测试连接是否可用
  staleConnectionCheckEnabled: true
#可用空闲连接过期时间,重用空闲连接时会先检查是否空闲时间超过这个时间，如果超过，释放socket重新建立
  validateAfterInactivity: 3000000

